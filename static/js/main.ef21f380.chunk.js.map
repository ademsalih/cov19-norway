{"version":3,"sources":["TotalGraph/TotalGraph.js","Spinner/Spinner.js","api/getCSV.js","TotalBox/TotalBox.js","Municipality/Municipality.js","Content/Content.js","Header/Header.js","App.js","serviceWorker.js","index.js","Spinner/spinner.png"],"names":["TotalGraph","data","labels","x","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","total","daily","className","height","width","options","aspectRatio","Spinner","src","spinner","alt","a","fetch","process","reponse","json","TotalBox","today","Municipality","y","sort","municipTotals","map","index","push","b","sorted","e","borderWidth","hoverBackgroundColor","hoverBorderColor","Content","useState","loading","setLoading","dates","setDates","setDaily","cumulative","setCumulative","setToday","setTotal","municips","setMunicips","municip","setMunicip","municipDaily","setMunicipDaily","municipCumulative","setMunicipCumulative","municipData","setMunicipData","municipTotalName","setMunicipTotalName","municipTotalCount","setMunicipTotalCount","cumulate","array","sum","cumulativeSum","value","parseInt","lastOf","length","React","useEffect","getJsonData","then","result","days","start","end","curr","Date","getFullYear","getMonth","getDate","datesBetween","formattedDays","d","n","day","toString","padStart","month","year","substr","entries","daySum","reduce","cumulated","currMun","find","newMun","Array","sortedMunicipData","selectMunicipList","municipArray","totalForMunicips","entry","classNamePrefix","defaultValue","filter","m","isDisabled","isLoading","isClearable","isRtl","isSearchable","name","onChange","console","log","handleChange","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ef21f380.chunk.js","sourcesContent":["import React from \"react\"\nimport { Line } from \"react-chartjs-2\"\nimport \"./style.css\"\n\nexport const TotalGraph = ({x,total,daily}) => {\n\tconst data = {\n\t\tlabels: x,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"Totalt\",\n\t\t\t\tfill: false,\n\t\t\t\tlineTension: 0.1,\n\t\t\t\tbackgroundColor: \"rgba(75,192,192,0.4)\",\n\t\t\t\tborderColor: \"rgba(202,15,27,1)\",\n\t\t\t\tborderCapStyle: \"butt\",\n\t\t\t\tborderDash: [],\n\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\tborderJoinStyle: \"miter\",\n\t\t\t\tpointBorderColor: \"rgba(202,15,27,1)\",\n\t\t\t\tpointBackgroundColor: \"#CA0F1B\",\n\t\t\t\tpointBorderWidth: 1,\n\t\t\t\tpointHoverRadius: 5,\n\t\t\t\tpointHoverBackgroundColor: \"rgba(202,15,27,1)\",\n\t\t\t\tpointHoverBorderColor: \"rgba(202,15,27,1)\",\n\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\tpointRadius: 3,\n\t\t\t\tpointHitRadius: 10,\n\t\t\t\tdata: total\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Nye\",\n\t\t\t\tfill: false,\n\t\t\t\tlineTension: 0.1,\n\t\t\t\tbackgroundColor: \"rgba(231,128,0,1)\",\n\t\t\t\tborderColor: \"rgba(231,128,0,1)\",\n\t\t\t\tborderCapStyle: \"butt\",\n\t\t\t\tborderDash: [],\n\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\tborderJoinStyle: \"miter\",\n\t\t\t\tpointBorderColor: \"rgba(231,128,0,1)\",\n\t\t\t\tpointBackgroundColor: \"#E77F00\",\n\t\t\t\tpointBorderWidth: 1,\n\t\t\t\tpointHoverRadius: 5,\n\t\t\t\tpointHoverBackgroundColor: \"rgba(231,128,0,1)\",\n\t\t\t\tpointHoverBorderColor: \"rgba(231,128,0,1)\",\n\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\tpointRadius: 3,\n\t\t\t\tpointHitRadius: 10,\n\t\t\t\tdata: daily\n\t\t\t}\n\t\t]\n\t}\n\n\treturn (\n\t\t<div className=\"graphBackground\">\n\t\t\t<Line\n\t\t\t\tdata={data}\n\t\t\t\theight={null}\n\t\t\t\twidth={null}\n\t\t\t\toptions={{\n\t\t\t\t\taspectRatio: 1.9\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport './style.css'\n\nimport spinner from './spinner.png'\n\nexport const Spinner = () => {\n    return(\n        <div className=\"spinnerBox\">\n            <img src={spinner} className=\"spinner\" alt=\"spinner\"/>\n            <p>Laster inn</p>\n        </div>\n    )\n}","export async function get() {\n    const reponse = await fetch(`${process.env.PUBLIC_URL}/infections-norway.csv`);\n    const data = await reponse.text();\n    return data\n}\n\nexport async function getJsonData() {\n    const reponse = await fetch(`${process.env.PUBLIC_URL}/norway.json`);\n    const data = await reponse.json();\n    return data\n}","import React from 'react'\nimport './style.css'\n\nexport const TotalBox = ({total,today}) => {\n    return(\n        <div className=\"summaryBox\">\n            <div className=\"totalBoxContainer\">\n                <div className=\"totalBox\">\n                    <h4>TOTALT</h4>\n                    <h1>{total}</h1>\n                </div>\n            </div>\n            <div className=\"todayBoxContainer\">\n                <div className=\"todayBox\">\n                    <h4>I DAG</h4>\n                    <h1>{today}</h1>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { HorizontalBar } from \"react-chartjs-2\"\nimport './style.css'\n\nexport const Municipality = ({x,y}) => {\n\n    function sorted() {\n        let municipTotals = []\n\n        x.map((x,index) => municipTotals.push( [x,y[index] ] ))\n\n        let sortedList = municipTotals.sort((a,b) => {\n            return a[1] < b[1]\n        })\n        \n        return sortedList\n    }\n\n    let sort = sorted()\n\n    let sortedMunicip = sort.map(e => e[0])\n    let sortedCount = sort.map(e => e[1])\n\n    const data = {\n        labels: sortedMunicip,\n        datasets: [\n            {\n                label: 'Smittede',\n                backgroundColor: 'rgba(202,15,27,1)',\n                borderColor: 'rgba(202,15,27,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(202,15,27,1)',\n                hoverBorderColor: 'rgba(202,15,27,1)',\n                data: sortedCount\n            }\n        ]\n    };\n\n    return(\n        <div>\n            <HorizontalBar\n                data={data}\n                height={null}\n                width={null}\n\t\t\t\toptions={{\n\t\t\t\t\taspectRatio: 0.8\n\t\t\t\t}}\n            />\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport { TotalGraph } from '../TotalGraph'\nimport { Spinner } from '../Spinner'\nimport { getJsonData } from '../api/getCSV.js'\nimport { TotalBox } from '../TotalBox'\nimport Select from 'react-select'\nimport { Municipality } from '../Municipality'\nimport './style.css'\n\nexport const Content = () => {\n    \n    const [loading,setLoading] = useState(true);\n    const [dates,setDates] = useState([]);\n\n    const [daily, setDaily] = useState([]);\n    const [cumulative, setCumulative] = useState([]);\n\n    const [today, setToday] = useState(0);\n    const [total, setTotal] = useState(0);\n\n    const [municips, setMunicips] = useState([]);\n    const [municip, setMunicip] = useState(\"Oslo\");\n\n    const [municipDaily, setMunicipDaily] = useState([]);\n    const [municipCumulative, setMunicipCumulative] = useState([]);\n\n    const [municipData, setMunicipData] = useState([]);\n\n    const [municipTotalName, setMunicipTotalName] = useState([]);\n    const [municipTotalCount, setMunicipTotalCount] = useState([]);\n\n    React.useEffect(() => {\n        getJsonData().then(result => {\n            \n            let startDate = new Date(result[\"startDate\"])\n            let days = datesBetween(startDate, new Date())\n            let formattedDays = formatDates(days)\n            setDates(formattedDays)\n\n            let entries = result[\"entries\"]\n\n            let daily = []\n\n            let municipData = []\n\n            entries.map(x => {\n                let day = []\n\n                x[\"municips\"].map(municip => {\n                    day.push(municip[\"count\"])\n                })\n\n            \n                let daySum = day.reduce((a, b) => a + b, 0)\n\n                daily.push(daySum)\n            })\n\n            let cumulated = cumulate(daily)\n\n            setDaily(daily)\n            setCumulative(cumulate(daily))\n\n            setToday(lastOf(daily))\n            setTotal(lastOf(cumulated))\n\n            entries.map((x,index) => {\n                x[\"municips\"].map(municip => {\n                    let currMun = municip[\"municip\"]\n                    let municipFound = municipData.find(x => x[\"municip\"] === currMun)\n\n                    if (!municipFound) {\n                        let newMun = {}\n\n                        newMun[\"municip\"] = currMun\n                        newMun[\"daily\"] = new Array(daily.length).fill(0);\n\n                        municipData.push(newMun)\n                    }\n                    municipData.find(x => x[\"municip\"] === currMun)[\"daily\"][index] = municip[\"count\"]\n                })\n            })\n\n\n            let sortedMunicipData = municipData.sort((a,b) => {\n                return a[\"municip\"] > b[\"municip\"]\n            })\n\n            setMunicipData(sortedMunicipData)\n\n            let allMunicips = sortedMunicipData.map(x => x[\"municip\"])\n            let selectMunicipList = allMunicips.map((e) => ({value: e,label: e}))\n\n            setMunicips(selectMunicipList)\n\n            let municipArray = sortedMunicipData.find(x => x[\"municip\"] === municip)[\"daily\"]\n            setMunicipDaily(municipArray)\n            setMunicipCumulative(cumulate(municipArray))\n\n            let totalForMunicips = sortedMunicipData.map(x => {\n                let entry = {}\n                entry[\"total\"] = x[\"daily\"].reduce((a, b) => a + b, 0)\n                entry[\"municip\"] = x[\"municip\"]\n                return entry\n            })\n\n            totalForMunicips = totalForMunicips.sort((a,b) => {\n                return a[\"total\"] > b[\"total\"]\n            })\n\n            setMunicipTotalName(totalForMunicips.map(x => x[\"municip\"]))\n            setMunicipTotalCount(totalForMunicips.map(x => x[\"total\"]))\n\n            setLoading(false)\n        })\n    }, [])\n\n    /*---------------------------- Helper Methods ------------------------------*/\n\n    function datesBetween(start,end) {\n        let dates = []\n        let curr = start\n        \n        while (curr < end) {\n            dates.push(curr)\n            curr = new Date(curr.getFullYear(),curr.getMonth(),curr.getDate()+1);\n        }\n        return dates\n     }\n\n    function formatDates(dateArray) {\n        return dateArray.map(d => {\n            let n = new Date(d)\n            let day = (n.getDate()).toString().padStart(2, \"0\")\n            let month = (n.getMonth()+1).toString().padStart(2, \"0\")\n            let year = n.getFullYear().toString().substr(2,2)\n            return `${day}.${month}.${year}`\n        })\n    }\n\n    function cumulate(array) {\n        const cumulativeSum = (sum => value => sum += parseInt(value))(0);\n        return array.map(cumulativeSum)\n    }\n\n    function lastOf(array) {\n        return array[array.length-1]\n    }\n\n    /*---------------------------- Handler Methods ------------------------------*/\n\n    function handleChange(e) {\n        console.log(e)\n        setMunicip(e)\n\n        let municipArray = municipData.find(x => x[\"municip\"] === e)[\"daily\"]\n\n        setMunicipDaily(municipArray)\n        setMunicipCumulative(cumulate(municipArray))\n    }\n\n    if (loading) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"content\">\n            <TotalBox total={total} today={today} />\n            <br/>\n            <TotalGraph x={dates} total={cumulative} daily={daily} />\n            <br/>\n            <br/>\n            <h3>KOMMUNEOVERSIKT</h3>\n            <br/>\n            <Select\n                className=\"basic-single\"\n                classNamePrefix=\"select\"\n                defaultValue={municips.filter(m => m[\"value\"] === \"Oslo\")}\n                isDisabled={false}\n                isLoading={false}\n                isClearable={false}\n                isRtl={false}\n                isSearchable={true}\n                name=\"color\"\n                options={municips}\n                onChange={e => handleChange(e.value)}\n            />\n            <br/>\n            <TotalBox today={lastOf(municipDaily)} total={lastOf(municipCumulative)} />\n            <br/> \n            <TotalGraph x={dates} total={municipCumulative} daily={municipDaily} />\n            <br/>\n            <br/>\n            <h3>FORDELING AV SMITTEDE</h3>\n            <br/>\n            <Municipality x={municipTotalName} y={municipTotalCount} />\n            <br/>\n            <br/>\n        </div>\n    )\n}\n","import React from \"react\"\nimport \"./style.css\"\n\nexport const Header = () => {\n    return (\n\t\t<div className=\"header\">\n\t\t\t<h2 className=\"heading\">Coronavirus i Norge</h2>\n\t\t</div>\n\t)\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { Content } from \"./Content\"\nimport { Header } from './Header'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n            <Header />\n\t\t\t<Content />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spinner.46497014.png\";"],"sourceRoot":""}