{"version":3,"sources":["Header/corona.png","TotalGraph/TotalGraph.js","Spinner/Spinner.js","api/getCSV.js","TotalBox/TotalBox.js","Municipality/Municipality.js","MunicipToday/MunicipToday.js","Content/Content.js","Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TotalGraph","x","total","daily","color1","color2","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","className","height","width","options","aspectRatio","Spinner","a","fetch","process","reponse","json","TotalBox","today","Municipality","y","sort","municipTotals","map","index","push","b","sorted","e","borderWidth","hoverBackgroundColor","hoverBorderColor","MunicipToday","stats","align","Content","useState","loading","setLoading","dates","setDates","setDaily","cumulative","setCumulative","setToday","setTotal","municips","setMunicips","municip","setMunicip","municipDaily","setMunicipDaily","municipCumulative","setMunicipCumulative","municipData","setMunicipData","municipTotalName","setMunicipTotalName","municipTotalCount","setMunicipTotalCount","municipsToday","setMunicipsToday","cumulate","array","sum","cumulativeSum","value","parseInt","lastOf","length","React","useEffect","getJsonData","then","result","days","start","end","curr","Date","getFullYear","getMonth","getDate","datesBetween","formattedDays","d","n","day","toString","padStart","month","entries","Array","m","daySum","reduce","cumulated","currMun","find","newMun","sortedMunicipData","selectMunicipList","municipArraySlice","slice","totalForMunicips","entry","classNamePrefix","defaultValue","isDisabled","isLoading","isClearable","isRtl","isSearchable","name","onChange","municipArray","handleChange","theme","colors","text","primary","primary25","primary50","primary75","dangerLight","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23855ac4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona.5dcd47dc.png\";","import React from \"react\"\nimport { Line } from \"react-chartjs-2\"\nimport \"./style.css\"\n\nexport const TotalGraph = ({x,total,daily,color1,color2}) => {\n\tconst data = {\n\t\tlabels: x,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"Totalt\",\n\t\t\t\tfill: false,\n\t\t\t\tlineTension: 0.1,\n\t\t\t\tbackgroundColor: \"rgba(75,192,192,0.4)\",\n\t\t\t\tborderColor: color1,\n\t\t\t\tborderCapStyle: \"butt\",\n\t\t\t\tborderDash: [],\n\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\tborderJoinStyle: \"miter\",\n\t\t\t\tpointBorderColor: color1,\n\t\t\t\tpointBackgroundColor: color1,\n\t\t\t\tpointBorderWidth: 1,\n\t\t\t\tpointHoverRadius: 5,\n\t\t\t\tpointHoverBackgroundColor: color1,\n\t\t\t\tpointHoverBorderColor: color1,\n\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\tpointRadius: 2,\n\t\t\t\tpointHitRadius: 10,\n\t\t\t\tdata: total\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Nye\",\n\t\t\t\tfill: false,\n\t\t\t\tlineTension: 0.1,\n\t\t\t\tbackgroundColor: color2,\n\t\t\t\tborderColor: color2,\n\t\t\t\tborderCapStyle: \"butt\",\n\t\t\t\tborderDash: [],\n\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\tborderJoinStyle: \"miter\",\n\t\t\t\tpointBorderColor: color2,\n\t\t\t\tpointBackgroundColor: color2,\n\t\t\t\tpointBorderWidth: 1,\n\t\t\t\tpointHoverRadius: 5,\n\t\t\t\tpointHoverBackgroundColor: color2,\n\t\t\t\tpointHoverBorderColor: color2,\n\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\tpointRadius: 2,\n\t\t\t\tpointHitRadius: 10,\n\t\t\t\tdata: daily\n\t\t\t}\n\t\t]\n\t}\n\n\treturn (\n\t\t<div className=\"graphBackground\">\n\t\t\t<Line\n\t\t\t\tdata={data}\n\t\t\t\theight={null}\n\t\t\t\twidth={null}\n\t\t\t\toptions={{\n\t\t\t\t\taspectRatio: 1.6\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport './style.css'\n\nexport const Spinner = () => {\n    return(\n        <div className=\"spinnerBox\">\n            <div className=\"loading\"></div>\n            <p>Laster inn</p>\n        </div>\n    )\n}","export async function get() {\n    const reponse = await fetch(`${process.env.PUBLIC_URL}/infections-norway.csv`);\n    const data = await reponse.text();\n    return data\n}\n\nexport async function getJsonData() {\n    const reponse = await fetch(`${process.env.PUBLIC_URL}/norway.json`);\n    const data = await reponse.json();\n    return data\n}","import React from 'react'\nimport './style.css'\n\nexport const TotalBox = ({total,today}) => {\n    return(\n        <div className=\"summaryBox\">\n            <div className=\"totalBoxContainer\">\n                <div className=\"totalBox\">\n                    <h4>TOTALT</h4>\n                    <h1>{total}</h1>\n                </div>\n            </div>\n            <div className=\"todayBoxContainer\">\n                <div className=\"todayBox\">\n                    <h4>I DAG</h4>\n                    <h1>{today}</h1>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { HorizontalBar } from \"react-chartjs-2\"\nimport './style.css'\n\nexport const Municipality = ({x,y}) => {\n\n    function sorted() {\n        let municipTotals = []\n\n        x.map((x,index) => municipTotals.push( [x,y[index] ] ))\n\n        let sortedList = municipTotals.sort((a,b) => {\n            return a[1] < b[1]\n        })\n        \n        return sortedList\n    }\n\n    let sort = sorted()\n\n    let sortedMunicip = sort.map(e => e[0])\n    let sortedCount = sort.map(e => e[1])\n\n    const data = {\n        labels: sortedMunicip,\n        datasets: [\n            {\n                label: 'Smittede',\n                backgroundColor: 'rgba(202,15,27,1)',\n                borderColor: 'rgba(202,15,27,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(202,15,27,1)',\n                hoverBorderColor: 'rgba(202,15,27,1)',\n                data: sortedCount\n            }\n        ]\n    };\n\n    return(\n        <div>\n            <HorizontalBar\n                data={data}\n                height={null}\n                width={null}\n\t\t\t\toptions={{\n\t\t\t\t\taspectRatio: 0.45\n\t\t\t\t}}\n            />\n        </div>\n    )\n}","import React from 'react'\nimport './style.css'\n\nexport const MunicipToday = ({stats}) => {\n\n    return(\n        <div className=\"municipTodayBox\">\n\n            <table>\n                <tr>\n                    <th align=\"left\">Kommune</th>\n                    <th align=\"center\">Antall</th> \n                </tr>\n                {stats.map((e,index) => [\n                    <tr className={index % 2 === 0 ? 'colorCell' : null}>\n                        <td align=\"left\">{e[\"municip\"]}</td>\n                        <td align=\"center\">{e[\"count\"]}</td>\n                    </tr>\n                ])}\n            </table>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport { TotalGraph } from '../TotalGraph'\nimport { Spinner } from '../Spinner'\nimport { getJsonData } from '../api/getCSV.js'\nimport { TotalBox } from '../TotalBox'\nimport Select from 'react-select'\nimport { Municipality } from '../Municipality'\nimport { MunicipToday } from '../MunicipToday'\nimport './style.css'\n\nexport const Content = () => {\n    const [loading,setLoading] = useState(true);\n    const [dates,setDates] = useState([]);\n\n    const [daily, setDaily] = useState([]);\n    const [cumulative, setCumulative] = useState([]);\n\n    const [today, setToday] = useState(0);\n    const [total, setTotal] = useState(0);\n\n    const [municips, setMunicips] = useState([]);\n    const [municip, setMunicip] = useState(\"Oslo\");\n\n    const [municipDaily, setMunicipDaily] = useState([]);\n    const [municipCumulative, setMunicipCumulative] = useState([]);\n\n    const [municipData, setMunicipData] = useState([]);\n\n    const [municipTotalName, setMunicipTotalName] = useState([]);\n    const [municipTotalCount, setMunicipTotalCount] = useState([]);\n\n    const [municipsToday, setMunicipsToday] = useState([]);\n\n    React.useEffect(() => {\n        getJsonData().then(result => {\n            \n            let startDate = new Date(result[\"startDate\"])\n            let days = datesBetween(startDate, new Date())\n            let formattedDays = formatDates(days)\n            setDates(formattedDays)\n\n            let entries = result[\"entries\"]\n\n            let municipsToday = lastOf(entries)[\"municips\"]\n\n            /* municipsToday = municipsToday.sort((a,b) => {\n                return a[\"count\"] < b[\"count\"]\n            }) */\n\n            setMunicipsToday(lastOf(entries)[\"municips\"])\n\n            let daily = new Array(formattedDays.length).fill(0)\n\n            let municipData = []\n\n            entries.map((x,index) => {\n                let day = []\n\n                x[\"municips\"].map(m => {\n                    day.push(m[\"count\"])\n                })\n\n                let daySum = day.reduce((a, b) => a + b, 0)\n\n                daily[index] = daySum\n            })\n\n            let cumulated = cumulate(daily)\n\n            setDaily(daily)\n            setCumulative(cumulated)\n\n            setToday(lastOf(daily))\n            setTotal(lastOf(cumulated))\n\n            entries.map((x,index) => {\n                \n                x[\"municips\"].map(m => {\n                    let currMun = m[\"municip\"]\n\n                    let municipFound = municipData.find(x => x[\"municip\"] === currMun)\n\n\n                    if (!municipFound) {\n                        let newMun = {}\n\n                        newMun[\"municip\"] = currMun\n                        newMun[\"daily\"] = new Array(formattedDays.length).fill(0)\n\n                        municipData.push(newMun)\n                    }\n\n                    municipData.find(x => x[\"municip\"] === currMun)[\"daily\"][index] = m[\"count\"]\n                })\n            })\n\n\n            let sortedMunicipData = municipData.sort((a,b) => {\n                return a[\"municip\"] > b[\"municip\"]\n            })\n\n\n            setMunicipData(sortedMunicipData)\n\n            let allMunicips = sortedMunicipData.map(x => x[\"municip\"])\n            let selectMunicipList = allMunicips.map((e) => ({value: e,label: e}))\n\n            setMunicips(selectMunicipList)\n\n            let municipArray = sortedMunicipData.find(x => x[\"municip\"] === municip)[\"daily\"]\n\n            let municipArraySlice = municipArray.slice()\n            \n            setMunicipDaily(municipArraySlice)\n            setMunicipCumulative(cumulate(municipArraySlice))\n\n            let totalForMunicips = sortedMunicipData.map(x => {\n                let entry = {}\n                entry[\"total\"] = x[\"daily\"].reduce((a, b) => a + b, 0)\n                entry[\"municip\"] = x[\"municip\"]\n                return entry\n            })\n\n            totalForMunicips = totalForMunicips.sort((a,b) => {\n                return a[\"total\"] > b[\"total\"]\n            })\n\n            setMunicipTotalName(totalForMunicips.map(x => x[\"municip\"]))\n            setMunicipTotalCount(totalForMunicips.map(x => x[\"total\"]))\n\n            \n\n            setLoading(false)\n        })\n    }, [])\n\n    /*---------------------------- Helper Methods ------------------------------*/\n\n    function datesBetween(start,end) {\n        let dates = []\n        let curr = start\n        \n        while (curr < end) {\n            dates.push(curr)\n            curr = new Date(curr.getFullYear(),curr.getMonth(),curr.getDate()+1);\n        }\n        return dates\n     }\n\n    function formatDates(dateArray) {\n        return dateArray.map(d => {\n            let n = new Date(d)\n            let day = (n.getDate()).toString().padStart(2, \"0\")\n            let month = (n.getMonth()+1).toString().padStart(2, \"0\")\n            //let year = n.getFullYear().toString().substr(2,2)\n            return `${day}.${month}`\n        })\n    }\n\n    function cumulate(array) {\n        const cumulativeSum = (sum => value => sum += parseInt(value))(0);\n        return array.map(cumulativeSum)\n    }\n\n    function lastOf(array) {\n        return array[array.length-1]\n    }\n\n    /*---------------------------- Handler Methods ------------------------------*/\n\n    function handleChange(e) {\n        setMunicip(e)\n        let municipArray = municipData.find(x => x[\"municip\"] === e)[\"daily\"]\n        setMunicipDaily(municipArray)\n        setMunicipCumulative(cumulate(municipArray))\n    }\n\n    if (loading) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"content\">\n            <TotalBox total={total} today={today} />\n            <br/>\n            <TotalGraph x={dates} total={cumulative} daily={daily} color1={\"rgba(202,15,27,1)\"} color2={\"rgba(231,128,0,1)\"} />\n            <br/>\n\n            {lastOf(daily) > 0 ? (\n                <>\n                    <br/>\n                    <h3>NYE TILFELLER I DAG</h3>\n                    <br/>\n                    <MunicipToday stats={municipsToday} />\n                    <br/>\n                </>\n            ): null}\n\n            <br/>\n            <h3>KOMMUNEUVISNING</h3>\n            <br/>\n            <Select\n                className=\"basic-single\"\n                classNamePrefix=\"select\"\n                defaultValue={municips.find(m => m[\"label\"] === municip)}\n                value={municips.find(m => m[\"label\"] === municip)}\n                isDisabled={false}\n                isLoading={false}\n                isClearable={false}\n                isRtl={false}\n                isSearchable={true}\n                name=\"color\"\n                options={municips}\n                onChange={e => handleChange(e.value)}\n                theme={(theme) => ({\n                ...theme,\n                colors: {\n                ...theme.colors,\n                    text: 'black',\n                    primary: 'rgb(70,70,70)',\n                    primary25: 'rgb(255,217,62)',\n                    primary50: 'rgb(255,217,62)',\n                    primary75: 'pink',\n                    dangerLight: 'pink'\n                },\n                })}\n            />\n            <br/>\n            <TotalBox today={lastOf(municipDaily)} total={lastOf(municipCumulative)} />\n            <br/> \n            <TotalGraph x={dates} total={municipCumulative} daily={municipDaily} color1={\"rgba(21,177,48,1)\"} color2={\"rgba(231,128,0,1)\"} />\n            <br/>\n            <br/>\n            <h3>FORDELING MELLOM KOMMUNER</h3>\n            <br/>\n            <Municipality x={municipTotalName} y={municipTotalCount} />\n            <br/>\n            <br/>\n            <p className=\"madeByText\">Kilde: FHI.no, NRK.no, VG.no og lokalaviser fra kommuner</p>\n            <p className=\"madeByText\">Laget av Adem Salih</p>\n            <br/>\n        </div>\n    )\n}\n","import React from \"react\"\nimport logo from './corona.png';\nimport \"./style.css\"\n\nexport const Header = () => {\n    return (\n\t\t<div className=\"header\">\n\t\t\t<h2 className=\"heading\">Coronavirus i Norge</h2>\n\t\t</div>\n\t)\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { Content } from \"./Content\"\nimport { Header } from './Header'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n            <Header />\n\t\t\t<Content />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}